#ifndef PRINT_DEFS_H_
#define PRINT_DEFS_H_

/* Header file defining printing functions */

/* Printing */
#cmakedefine OSQP_CUSTOM_PRINTING

#include <stdio.h>
#include <string.h>

/* Error printing function */
/* Always define this, and let implementations undefine if they want to change it */
# if __STDC_VERSION__ >= 199901L
/* The C99 standard gives the __func__ macro, which is preferred over __FUNCTION__ */
# define c_eprint(...) c_print("ERROR in %s: ", __func__); \
         c_print(__VA_ARGS__); c_print("\n");
#else
# define c_eprint(...) c_print("ERROR in %s: ", __FUNCTION__); \
         c_print(__VA_ARGS__); c_print("\n");
#endif


#ifdef OSQP_CUSTOM_PRINTING
/* Use user-provided printing functions */
# include "@OSQP_CUSTOM_PRINTING@"
#elif defined MATLAB
/* informational print function */
# define c_print mexPrintf
#elif defined PYTHON
# include <Python.h>
# define c_print(...)                              \
  {                                                  \
    PyGILState_STATE gilstate = PyGILState_Ensure(); \
    PySys_WriteStdout(__VA_ARGS__);                  \
    PyGILState_Release(gilstate);                    \
  }
#elif defined R_LANG
# include <R_ext/Print.h>
# define c_print Rprintf
    /* Some CRAN builds complain about __VA_ARGS__, so just print */
    /* out the error messages on R without the __FUNCTION__ trace */
# undefine c_eprint
# define c_eprint Rprintf
#else  /* ifdef MATLAB */
# define c_print printf
#endif /* Printing function configuration */


#endif /* PRINT_DEFS_H_ */
